name: 'Terraform'

on:
  pull_request:
    branches:
  
jobs:  
  terraform_lint:
    runs-on: ubuntu-latest
    name: terralint-action
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Super-Linter
      uses: docker://wata727/tflint:0.29.0

  validate:
    name: 'Validate Configuration'
    needs: terraform_lint
    runs-on: ubuntu-latest
    steps:
    - name: Validate Terraform
      uses: actions/checkout@v2

    - name: terraform validate
      uses: dflook/terraform-validate@v1
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        TERRAFORM_HTTP_CREDENTIALS: |
          github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
      with:
        path: ./

  terraform:
      name: 'Pre Setup DEV'
      runs-on: ubuntu-latest
      needs: validate 
      environment: dev

      # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
      defaults:
        run:
          shell: bash

      steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          export_default_credentials: true

      - name: Bucket creation DEV
        shell: bash
        run: |
          gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )

      - name: plan-dev
        uses: dflook/terraform-plan@v1
        env:
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
          TERRAFORM_HTTP_CREDENTIALS: |
            github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
          TF_VAR_ssl_server_certificate: ${{ secrets.SERVER_CERTIFICATE}}
          TF_VAR_ssl_server_key: ${{ secrets.SERVER_KEY }}
          TF_VAR_jumpbox_docker_registry_password: ${{ secrets.TOKEN}}
        with:
          path: ./
          var_file: environment/dev/variables.tfvars
          label: dev
          backend_config_file: environment/dev/gcs-bucket.tfvars

  # ####################################
  # # Staging 
  # ####################################

  pre-setup-staging:
    name: 'Pre Setup Staging'
    runs-on: ubuntu-latest
    needs: validate
    environment: staging

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
        export_default_credentials: true

    - name: Bucket staging
      shell: bash
      run: |
        gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )

    - name: plan-staging
      uses: dflook/terraform-plan@v1
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        TERRAFORM_HTTP_CREDENTIALS: |
          github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
        TF_VAR_ssl_server_certificate: ${{ secrets.SERVER_CERTIFICATE}}
        TF_VAR_ssl_server_key: ${{ secrets.SERVER_KEY }}
        TF_VAR_jumpbox_docker_registry_password: test
      with:
        path: ./
        var_file: environment/staging/variables.tfvars
        label: staging
        backend_config_file: environment/staging/gcs-bucket.tfvars

####################################
# IBO - Production
####################################

  pre-setup-ibo:
    name: 'Pre Setup IBO'
    runs-on: ubuntu-latest
    needs: validate
    environment: ibo

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID_IBO }}
        service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY_IBO }}
        export_default_credentials: true

    - name: Bucket Production
      shell: bash
      run: |
        gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME_IBO}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME_IBO}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME_IBO}} )

    - name: plan-production
      uses: dflook/terraform-plan@v1
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        TERRAFORM_HTTP_CREDENTIALS: |
          github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
        TF_VAR_ssl_server_certificate: ${{ secrets.SERVER_CERTIFICATE}}
        TF_VAR_ssl_server_key: ${{ secrets.SERVER_KEY }}
        TF_VAR_jumpbox_docker_registry_password: test
      with:
        path: ./
        var_file: environment/production/variables.tfvars
        label: ibo
        backend_config_file: environment/production/gcs-bucket.tfvars