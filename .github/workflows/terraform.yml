name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:


jobs:
  # quality_check:
  #   name: terrascan
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2
  #     - name: Super-Linter
  #       uses: docker://ghcr.io/github/super-linter:slim-v4
  #       env:
  #        FILTER_REGEX_INCLUDE: "./*.tf"
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # needs: quality_check
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
        export_default_credentials: true
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.4

    - name: Bucket creation
      shell: bash
      run: |
        gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )
    
    - name: composite
      uses: ebomart/infra-composite-action@v1.3
      with:
        infraEnvironment: 'dev'
    
    - name: Archive plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: dev.tfplan
  
  apply-dev:
    name: 'apply-dev'
    runs-on: ubuntu-latest
    needs: terraform
    environment: dev
    steps:
    - name: setup terraform
      if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.4
    
    - name: Download tfplan
      if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }} 
      uses: actions/download-artifact@v2
      with:
        name: tfplan
    
    - name: apply_dev
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_PRIVATE_KEY }}
      if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
      run: |
        terraform init -input=false -backend-config=environment/dev/gcs-bucket.tfvars 
        terraform apply -input=false dev.tfplan

