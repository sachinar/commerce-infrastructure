name: 'Terraform'

on:
  pull_request:
    branches:
  
jobs:
  # quality_check:
  #   name: terrascan
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2
  #     - name: Super-Linter
  #       uses: docker://ghcr.io/github/super-linter:slim-v4
  #       env:
  #        FILTER_REGEX_INCLUDE: "./*.tf"
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate:
    name: 'Validate Configuration'
    runs-on: ubuntu-latest
  
    steps:
    - name: Validate Terraform
      uses: actions/checkout@v2

    - name: terraform validate
      uses: dflook/terraform-validate@v1
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        TERRAFORM_HTTP_CREDENTIALS: |
          github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
      with:
        path: ./

  terraform:
    name: 'Pre Setup DEV'
    runs-on: ubuntu-latest
    needs: validate 
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
        export_default_credentials: true

    - name: Bucket creation DEV
      shell: bash
      run: |
        gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )

    - name: plan-dev
      uses: dflook/terraform-plan@v1
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        TERRAFORM_HTTP_CREDENTIALS: |
          github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
      with:
        path: ./
        var_file: environment/dev/variables.tfvars
        label: dev
        backend_config_file: environment/dev/gcs-bucket.tfvars
        variables: TF_VAR_test: "test"

####################################
# Staging 
####################################

  pre-setup-staging:
    name: 'Pre Setup Staging'
    runs-on: ubuntu-latest
    needs: validate
    environment: staging

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
        export_default_credentials: true

    - name: Bucket staging
      shell: bash
      run: |
        gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )

    - name: plan-staging
      uses: dflook/terraform-plan@v1
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        TERRAFORM_HTTP_CREDENTIALS: |
          github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
      with:
        path: ./
        var_file: environment/staging/variables.tfvars
        label: staging
        backend_config_file: environment/staging/gcs-bucket.tfvars
        variables: TF_VAR_test: "test"

####################################
# Sandbox 
####################################

#   pre-setup-sandbox:
#     name: 'Pre Setup Sandbox'
#     runs-on: ubuntu-latest
#     needs: validate
#     environment: sandbox

#     # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
#     defaults:
#       run:
#         shell: bash

#     steps:
#     # Checkout the repository to the GitHub Actions runner
#     - name: Checkout
#       uses: actions/checkout@v2
    
#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@master
#       with:
#         project_id: ${{ secrets.GCP_PROJECT_ID }}
#         service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
#         export_default_credentials: true

#     - name: Bucket Sandbox
#       shell: bash
#       run: |
#         gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )

#     - name: plan-sandbox
#       uses: dflook/terraform-plan@v1
#       env:
#         GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
#         TERRAFORM_HTTP_CREDENTIALS: |
#           github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
#       with:
#         path: ./
#         var_file: environment/sandbox/variables.tfvars
#         label: sandbox
#         backend_config_file: environment/sandbox/gcs-bucket.tfvars

# ####################################
# # Production 
# ####################################

#   pre-setup-prod:
#     name: 'Pre Setup Production'
#     runs-on: ubuntu-latest
#     needs: validate
#     environment: prod

#     # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
#     defaults:
#       run:
#         shell: bash

#     steps:
#     # Checkout the repository to the GitHub Actions runner
#     - name: Checkout
#       uses: actions/checkout@v2
    
#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@master
#       with:
#         project_id: ${{ secrets.GCP_PROJECT_ID }}
#         service_account_key: ${{ secrets.GOOGLE_PRIVATE_KEY }}
#         export_default_credentials: true

#     - name: Bucket Production
#       shell: bash
#       run: |
#         gsutil ls -b gs://${{ secrets.GCP_PROJECT_NAME}} || (gcloud services enable storage-api.googleapis.com && gsutil mb gs://${{ secrets.GCP_PROJECT_NAME}} && gsutil versioning set on gs://${{ secrets.GCP_PROJECT_NAME}} )

#     - name: plan-production
#       uses: dflook/terraform-plan@v1
#       env:
#         GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
#         TERRAFORM_HTTP_CREDENTIALS: |
#           github.com/ebomart=${{ secrets.CI_USER}}:${{ secrets.CI_TOKEN}}
#       with:
#         path: ./
#         var_file: environment/production/variables.tfvars
#         label: production
#         backend_config_file: environment/production/gcs-bucket.tfvars


